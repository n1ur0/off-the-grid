# Grafana datasource configuration
apiVersion: 1

datasources:
  # Prometheus
  - name: Prometheus
    type: prometheus
    access: proxy
    url: http://prometheus:9090
    isDefault: true
    editable: true
    jsonData:
      timeInterval: 15s
      queryTimeout: 60s
      httpMethod: POST
      manageAlerts: true
      prometheusType: Prometheus
      prometheusVersion: 2.48.0
      cacheLevel: 'High'
      incrementalQuerying: true
      disableRecordingRules: false
      exemplarTraceIdDestinations:
        - name: traceID
          datasourceUid: jaeger

  # Loki for logs
  - name: Loki
    type: loki
    access: proxy
    url: http://loki:3100
    editable: true
    jsonData:
      maxLines: 1000
      derivedFields:
        - matcherRegex: "traceID=(\\w+)"
          name: TraceID
          url: "$${__value.raw}"
          datasourceUid: jaeger

  # Jaeger for traces
  - name: Jaeger
    type: jaeger
    access: proxy
    url: http://jaeger:16686
    editable: true
    uid: jaeger
    jsonData:
      tracesToLogs:
        datasourceUid: loki
        tags: ['job', 'instance', 'pod', 'namespace']
        mappedTags: [{ key: 'service.name', value: 'service' }]
        mapTagNamesEnabled: false
        spanStartTimeShift: '1h'
        spanEndTimeShift: '1h'
      tracesToMetrics:
        datasourceUid: prometheus
        tags: [{ key: 'service.name', value: 'service' }]
        queries:
          - name: 'Sample query'
            query: 'sum(rate(http_requests_total{service="$${__tags.service}"}[5m]))'
      nodeGraph:
        enabled: true
      search:
        hide: false
      spanBar:
        type: 'Tag'
        tag: 'http.path'

  # PostgreSQL for direct database queries
  - name: PostgreSQL
    type: postgres
    access: proxy
    url: postgres:5432
    database: off_the_grid
    user: postgres
    editable: true
    secureJsonData:
      password: postgres
    jsonData:
      sslmode: disable
      maxOpenConns: 10
      maxIdleConns: 2
      maxIdleConnsAuto: true
      connMaxLifetime: 14400
      postgresVersion: 1400
      timescaledb: false

  # Redis for cache metrics
  - name: Redis
    type: redis-datasource
    access: proxy
    url: redis://redis:6379
    editable: true
    secureJsonData:
      password: redis_password
    jsonData:
      client: standalone
      poolSize: 5
      timeout: 10
      pingInterval: 0
      pipelineWindow: 0